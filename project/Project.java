package project;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

@SuppressWarnings("ALL")
public class Project {
    private static Random random = new Random();
    private static int north = 0;
    private static int south = 0;
    private static int east = 0;
    private static int west = 0;
    private static int northborder = random.nextInt(50, 75);
    private static int southborder = random.nextInt(50, 75);
    private static int eastborder = random.nextInt(50, 75);
    private static int westborder = random.nextInt(50, 75);
    private static int northeastborder = random.nextInt(25, 50);
    private static int southwestborder = random.nextInt(25, 50);
    public static boolean game;
    public static String endtext;
    private JTextField input;
    private JButton Enter;
    private JLabel text;
    private JPanel window;

    public static void main(String[] args) {
        JFrame jFrame = new JFrame();
        Project gui = new Project();

        jFrame.setSize(300, 300);
        jFrame.setVisible(true);
        /*game = true;
        Scanner input = new Scanner(System.in);
        System.out.println("You are in a forest with no way out,\nYou only hava a dagger\nand you must find your way out");
        while (game) {
            if (north > northeastborder && east > northeastborder) {
                endtext = "You got out of the forest";
                game = false;
            } else if (south > southwestborder && west > southwestborder) {
                endtext = "You got out of the forest";
                game = false;
            } else if (north > northborder) {
                endtext = "You got out of the forest";
                game = false;
            } else if (south > southborder) {
                endtext = "You got out of the forest";
                game = false;
            } else if (east > eastborder) {
                endtext = "You got out of the forest";
                game = false;
            } else if (west > westborder) {
                endtext = "You got out of the forest";
                game = false;
            } else {
                System.out.print("Enter your next move: ");
                String move;
                move = input.nextLine();
                new steps(move);

            }
        }
        System.out.print(endtext);*/
    }

    public static void setDirection(int north, int south, int east, int west) {
        Project.north = north;
        Project.south = south;
        Project.east = east;
        Project.west = west;
    }

    public static int getNorth() {
        return north;
    }

    public static int getSouth() {
        return south;
    }

    public static int getEast() {
        return east;
    }

    public static int getWest() {
        return west;
    }

    public Project() {
        $$$setupUI$$$();
        Enter.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(Enter, "HI", "hi", JOptionPane.PLAIN_MESSAGE);
            }
        });
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        window = new JPanel();
        window.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(50, 50, 50, 50), -1, -1));
        Enter = new JButton();
        Enter.setText("Button");
        window.add(Enter, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        input = new JTextField();
        window.add(input, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        text = new JLabel();
        text.setText("Label");
        window.add(text, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return window;
    }

}
